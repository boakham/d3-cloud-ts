{"version":3,"file":"d3-cloud-ts.mjs","sources":["../../../projects/d3-cloud-ts/src/lib/index.ts","../../../projects/d3-cloud-ts/src/public-api.ts","../../../projects/d3-cloud-ts/src/d3-cloud-ts.ts"],"sourcesContent":["// Word cloud layout by Jason Davies, https://www.jasondavies.com/wordcloud/\n// Updated by Benjamin Oakham to use D3 7.5.0 (for Strict Mode) and Type Script\n// Algorithm due to Jonathan Feinberg, http://static.mrfeinberg.com/bv_ch03.pdf\n\n\n\nimport * as d3 from 'd3-dispatch';\n\nexport namespace D3CloudTs {\n\n  type canvasType<T> =\n    T extends HTMLCanvasElement | (() => HTMLCanvasElement) ? CloudData : (() => HTMLCanvasElement);\n\n  type timeInvervalType<T> =\n    T extends number | null ? CloudData : number;\n\n  type wordType<T> =\n    T extends Word[] ? CloudData : Word[]\n\n  type textFunctorType<T> =\n    T extends String | ((_: any, d: Word, i: number) => String) ? CloudData : ((_: any, d: Word, i: number) => String);\n\n  type numberFunctorType<T> =\n    T extends number | ((_: any, d: Word, i: number) => number) ? CloudData : ((_: any, d: Word, i: number) => number);\n\n  type sizeType<T> =\n    T extends number[] ? CloudData : [number, number];\n\n  type spiralType<T> =\n    T extends String | ((size: number[]) => (t: number) => number[]) ? CloudData : (size: number[]) => (t: number) => number[];\n\n  type randomType<T> =\n    T extends (() => number) ? CloudData : number;\n\n  type onType<T> =\n    T extends any[] ? CloudData : any;\n\n\n  export interface CloudData {\n    canvas?: <T>(_?: T) => canvasType<T>,\n    start?: () => CloudData,\n    stop?: () => CloudData,\n    timeInterval?: <T extends number | null>(_?: T) => timeInvervalType<T>,\n    words?: <T extends Word[]>(_?: T) => wordType<T>,\n    size?: <T extends number[]>(_?: T) => sizeType<T>,\n    font?: <T extends String | ((_: any, d: Word, i: number) => String) >(_?: T) => textFunctorType<T>,\n    fontStyle?: <T extends String | ((_: any, d: Word, i: number) => String) >(_?: T) => textFunctorType<T>,\n    fontWeight?: <T extends String | ((_: any, d: Word, i: number) => String) >(_?: T) => textFunctorType<T>,\n    rotate?: <T extends number | ((_: any, d: Word, i: number) => number) >(_?: T) => numberFunctorType<T>,\n    text?: <T extends String | ((_: any, d: Word, i: number) => String) >(_?: T) => textFunctorType<T>,\n    spiral?: <T extends String | ((size: number[]) => (t: number) => number[]) >(_?: T) => spiralType<T>,\n    fontSize?: <T extends number | ((_: any, d: Word, i: number) => number) >(_?: T) => numberFunctorType<T>,\n    padding?: <T extends number | ((_: any, d: Word, i: number) => number) >(_?: T) => numberFunctorType<T>,\n    random?: <T extends (() => number) >(_?: T) => randomType<T>,\n    on?: <T extends any[2]>(_: T) => onType<T>\n  }\n\n  export interface Word {\n    key: string,\n    value: number,\n    text?: string,\n    font?: string,\n    style?: string,\n    weight?: string,\n    rotate?: number,\n    size?: number,\n    padding?: number,\n    sprite?: number[],\n    x?: number,\n    x0?: number,\n    x1?: number,\n    xoff?: number,\n    y?: number,\n    y0?: number,\n    y1?: number,\n    yoff?: number,\n    hasText?: boolean,\n    width?: number,\n    height?: number,\n  }\n\n  export class Cloud {\n\n    protected static cloudRadians = Math.PI / 180;\n    protected cw = 1 << 11 >> 5;\n    protected ch = 1 << 11;\n    protected size: [number, number] = [256, 256];\n    protected text = this.cloudText;\n    protected font = this.cloudFont;\n    protected fontSize = this.cloudFontSize;\n    protected fontStyle = this.cloudFontNormal;\n    protected fontWeight = this.cloudFontNormal;\n    protected rotate = this.cloudRotate;\n    protected padding = this.cloudPadding;\n    protected spiral = this.archimedeanSpiral;\n    protected words: Word[] = [];\n    protected timeInterval = Infinity;\n    protected event = d3.dispatch(\"word\", \"end\");\n    protected timer?: ReturnType<typeof setInterval> | null;\n    protected random = Math.random;\n    protected canvas = this.cloudCanvas;\n    public config: CloudData = {};\n\n    constructor() {\n      this.config.start = () => {\n        let contextAndRatio: { context: CanvasRenderingContext2D, ratio: number } = <{ context: CanvasRenderingContext2D, ratio: number }>this.getContext(this.canvas());\n        let board: number[] = this.zeroArray((this.size[0] >> 5) * this.size[1]);\n        let bounds: { x: number, y: number }[] | null = null;\n        const n = this.words.length;\n        let i = -1;\n        let tags: Word[] = [];\n        let data: Word[] = this.words.map((d, i) => {\n          d.text = this.text(this, d, i);\n          d.font = this.font(this, d, i);\n          d.style = this.fontStyle(this, d, i);\n          d.weight = this.fontWeight(this, d, i);\n          d.rotate = this.rotate(this, d, i);\n          d.size = ~~this.fontSize(this, d, i);\n          d.padding = this.padding(this, d, i);\n          return d;\n        }).sort((a, b) => { return b.size! - a.size!; });\n        let step = () => {\n          let start = Date.now();\n          while (Date.now() - start < this.timeInterval && ++i < n && this.timer) {\n            let d: Word = data[i];\n            d.x = (this.size[0] * (this.random() + .5)) >> 1;\n            d.y = (this.size[1] * (this.random() + .5)) >> 1;\n            this.cloudSprite(contextAndRatio, d, data, i);\n            if (d.hasText && this.place(board, d, bounds!)) {\n              tags.push(d);\n              this.event.call(\"word\", this.config, d);\n              if (bounds) this.cloudBounds(bounds, d);\n              else bounds = [{ x: d.x + d.x0!, y: d.y + d.y0! }, { x: d.x + d.x1!, y: d.y + d.y1! }];\n              // Temporary hack\n              d.x -= this.size[0] >> 1;\n              d.y -= this.size[1] >> 1;\n            }\n          }\n          if (i >= n) {\n            this.config.stop!();\n            this.event.call(\"end\", this.config, tags, bounds);\n          }\n        }\n        if (this.timer) clearInterval(this.timer);\n        this.timer = setInterval(step, 0);\n        step();\n\n        return this.config;\n\n      }\n\n      this.config.canvas = <T>(_?: T) => {\n        return <canvasType<T>>(_ ? (this.canvas = this.functor(_), this.config) : this.canvas);\n      };\n\n      this.config.stop = () => {\n        if (this.timer) {\n          clearInterval(this.timer);\n          this.timer = null;\n        }\n        return this.config;\n      };\n\n      this.config.timeInterval = <T extends number | null>(_?: T): timeInvervalType<T> => {\n\n        return <timeInvervalType<T>>(_ ? (this.timeInterval = _ == null ? Infinity : _, this.config) : this.timeInterval);\n      };\n\n      this.config.words = <T extends Word[]>(_?: T) => {\n        return <wordType<T>>(_ ? (this.words = _, this.config) : this.words);\n      };\n\n      this.config.size = <T extends number[]>(_?: T) => {\n        return <sizeType<T>>(_ ? (this.size = [+_[0], +_[1]], this.config) : this.size);\n      };\n\n\n      this.config.font = <T extends String | ((_: any, d: Word, i: number) => String)>(_?: T) => {\n        return <textFunctorType<T>>(_ ? (this.font = this.functor(_), this.config) : this.font);\n      };\n\n      this.config.fontStyle = <T extends String | ((_: any, d: Word, i: number) => String)>(_?: T) => {\n        return <textFunctorType<T>>(_ ? (this.fontStyle = this.functor(_), this.config) : this.fontStyle);\n      };\n\n      this.config.fontWeight = <T extends String | ((_: any, d: Word, i: number) => String)>(_?: T) => {\n        return <textFunctorType<T>>(_ ? (this.fontWeight = this.functor(_), this.config) : this.fontWeight);\n      };\n\n      this.config.rotate = <T extends number | ((_: any, d: Word, i: number) => number)>(_?: T) => {\n        return <numberFunctorType<T>>(_ ? (this.rotate = this.functor(_), this.config) : this.rotate);\n      };\n\n      this.config.text = <T extends String | ((_: any, d: Word, i: number) => String)>(_?: T) => {\n        return <textFunctorType<T>>(_ ? (this.text = this.functor(_), this.config) : this.text);\n      };\n\n      this.config.spiral = <T extends String | ((size: number[]) => (t: number) => number[])>(_?: T) => {\n\n        return <spiralType<T>>(_ ? (this.spiral = ((<String>_ == 'archimedean' || <String>_ == 'rectangular') ? this.spirals[<'archimedean' | 'rectangular'>_] : <(size: number[]) => (t: number) => number[]>_), this.config) : this.spiral);\n      };\n\n      this.config.fontSize = <T extends number | ((_: any, d: Word, i: number) => number)>(_?: T) => {\n        return <numberFunctorType<T>>(_ ? (this.fontSize = this.functor(_), this.config) : this.fontSize);\n      };\n\n      this.config.padding = <T extends number | ((_: any, d: Word, i: number) => number)>(_?: T) => {\n        return <numberFunctorType<T>>(_ ? (this.padding = this.functor(_), this.config) : this.padding);\n      };\n\n      this.config.random = <T extends (() => number)>(_?: T) => {\n        return <randomType<T>>(_ ? (this.random = _, this.config) : this.random);\n      };\n\n      this.config.on = <T extends any[2]>(_: T) => {\n        let value: any = this.event.on.apply(this.event, <any[2]>_);\n        return <onType<T>>(value === this.event ? this.config : value);\n      };\n\n\n    };\n\n    protected getContext = (canvas: HTMLCanvasElement) => {\n      canvas.width = canvas.height = 1;\n      let ratio = Math.sqrt(canvas.getContext(\"2d\")!.getImageData(0, 0, 1, 1).data.length >> 2);\n      canvas.width = (this.cw << 5) / ratio;\n      canvas.height = this.ch / ratio;\n\n      let context = canvas.getContext(\"2d\");\n      context!.fillStyle = context!.strokeStyle = \"red\";\n      context!.textAlign = \"center\";\n\n      return { context: context, ratio: ratio };\n    }\n\n\n    protected place = (board: number[], tag: Word, bounds: { x: number, y: number }[]) => {\n      //let perimeter = [{x: 0, y: 0}, {x: this.size[0], y: this.size[1]}];\n      let startX = tag.x!;\n      let startY = tag.y!;\n      let maxDelta = Math.sqrt(this.size[0] * this.size[0] + this.size[1] * this.size[1]);\n      let s = this.spiral(this.size);\n      let dt = this.random() < .5 ? 1 : -1;\n      let t = -dt;\n      let dxdy: number[];\n      let dx: number;\n      let dy: number;\n\n      while (dxdy = s(t += dt)) {\n        dx = ~~dxdy[0];\n        dy = ~~dxdy[1];\n\n        if (Math.min(Math.abs(dx), Math.abs(dy)) >= maxDelta) break;\n\n        tag.x = startX + dx;\n        tag.y = startY + dy;\n\n        if (tag.x + tag.x0! < 0 || tag.y + tag.y0! < 0 ||\n          tag.x + tag.x1! > this.size[0] || tag.y + tag.y1! > this.size[1]) continue;\n        // TODO only check for collisions within current bounds.\n        if (!bounds || !this.cloudCollide(tag, board, this.size[0])) {\n          if (!bounds || this.collideRects(tag, bounds)) {\n            let sprite = tag.sprite;\n            let w = tag.width! >> 5;\n            let sw = this.size[0] >> 5;\n            let lx = tag.x - (w << 4);\n            let sx = lx & 0x7f;\n            let msx = 32 - sx;\n            let h = tag.y1! - tag.y0!;\n            let x = (tag.y + tag.y0!) * sw + (lx >> 5);\n            let last: number;\n            for (let j = 0; j < h; j++) {\n              last = 0;\n              for (let i = 0; i <= w; i++) {\n                board[x + i] |= (last << msx) | (i < w ? (last = sprite![j * w + i]) >>> sx : 0);\n              }\n              x += sw;\n            }\n            delete tag.sprite;\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n\n    cloudText(_: any, d: Word, i: number) {\n      return d.text;\n    }\n\n    cloudFont(_: any, d: Word, i: number) {\n      return \"serif\";\n    }\n\n    cloudFontNormal(_: any, d: Word, i: number) {\n      return \"normal\";\n    }\n\n    cloudFontSize(_: any, d: Word, i: number) {\n      return Math.sqrt(d.value);\n    }\n\n    cloudRotate(_: any, d: Word, i: number) {\n      return (~~(Math.random() * 6) - 3) * 30;\n    }\n\n    cloudPadding(_: any, d: Word, i: number) {\n      return 1;\n    }\n\n    // Fetches a monochrome sprite bitmap for the specified text.\n    // Load in batches for speed.\n    protected cloudSprite(contextAndRatio: { context: CanvasRenderingContext2D, ratio: number }, d: Word, data: Word[], di: number) {\n      if (d.sprite) return;\n      let c = contextAndRatio.context;\n      let ratio = contextAndRatio.ratio;\n\n      c.clearRect(0, 0, (this.cw << 5) / ratio, this.ch / ratio);\n      let x = 0;\n      let y = 0;\n      let maxh = 0;\n      let n = data.length;\n      --di;\n      while (++di < n) {\n        d = data[di];\n        c.save();\n        c.font = d.style + \" \" + d.weight + \" \" + ~~((d.size! + 1) / ratio) + \"px \" + d.font;\n        let w = c.measureText(d.text + \"m\").width * ratio;\n        let h = d.size! << 1;\n        if (d.rotate) {\n          let sr = Math.sin(d.rotate * Cloud.cloudRadians);\n          let cr = Math.cos(d.rotate * Cloud.cloudRadians);\n          let wcr = w * cr;\n          let wsr = w * sr;\n          let hcr = h * cr;\n          let hsr = h * sr;\n          w = (Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f) >> 5 << 5;\n          h = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));\n        } else {\n          w = (w + 0x1f) >> 5 << 5;\n        }\n        if (h > maxh) maxh = h;\n        if (x + w >= (this.cw << 5)) {\n          x = 0;\n          y += maxh;\n          maxh = 0;\n        }\n        if (y + h >= this.ch) break;\n        c.translate((x + (w >> 1)) / ratio, (y + (h >> 1)) / ratio);\n        if (d.rotate) c.rotate(d.rotate * Cloud.cloudRadians);\n        c.fillText(d.text!, 0, 0);\n        if (d.padding) c.lineWidth = 2 * d.padding, c.strokeText(d.text!, 0, 0);\n        c.restore();\n        d.width = w;\n        d.height = h;\n        d.xoff = x;\n        d.yoff = y;\n        d.x1 = w >> 1;\n        d.y1 = h >> 1;\n        d.x0 = -d.x1;\n        d.y0 = -d.y1;\n        d.hasText = true;\n        x += w;\n      }\n      let pixels = c.getImageData(0, 0, (this.cw << 5) / ratio, this.ch / ratio).data;\n      let sprite: number[] = [];\n      while (--di >= 0) {\n        d = data[di];\n        if (!d.hasText) continue;\n        let w = d.width;\n        let w32 = w! >> 5;\n        let h = d.y1! - d.y0!;\n        // Zero the buffer\n        for (let i = 0; i < h * w32; i++) sprite[i] = 0;\n        x = d.xoff!;\n        if (x == null) return;\n        y = d.yoff!;\n        let seen = 0;\n        let seenRow = -1;\n        for (let j = 0; j < h; j++) {\n          for (let i = 0; i < w!; i++) {\n            let k = w32 * j + (i >> 5);\n            let m = pixels[((y + j) * (this.cw << 5) + (x + i)) << 2] ? 1 << (31 - (i % 32)) : 0;\n            sprite[k] |= m;\n            seen |= m;\n          }\n          if (seen) seenRow = j;\n          else {\n            d.y0!++;\n            h--;\n            j--;\n            y++;\n          }\n        }\n        d.y1 = d.y0! + seenRow;\n        d.sprite = sprite.slice(0, (d.y1 - d.y0!) * w32);\n      }\n    }\n\n    // Use mask-based collision detection.\n    protected cloudCollide(tag: Word, board: number[], sw: number) {\n      sw >>= 5;\n      let sprite = tag.sprite;\n      let w = tag.width! >> 5;\n      let lx = tag.x! - (w << 4);\n      let sx = lx & 0x7f;\n      let msx = 32 - sx;\n      let h = tag.y1! - tag.y0!;\n      let x = (tag.y! + tag.y0!) * sw + (lx >> 5);\n      let last;\n      for (let j = 0; j < h; j++) {\n        last = 0;\n        for (let i = 0; i <= w; i++) {\n          if (((last << msx) | (i < w ? (last = sprite![j * w + i]) >>> sx : 0))\n            & board[x + i]) return true;\n        }\n        x += sw;\n      }\n      return false;\n    }\n\n    protected cloudBounds(bounds: { x: number, y: number }[], d: Word) {\n      let b0 = bounds[0];\n      let b1 = bounds[1];\n      if (d.x! + d.x0! < b0.x) b0.x = d.x! + d.x0!;\n      if (d.y! + d.y0! < b0.y) b0.y = d.y! + d.y0!;\n      if (d.x! + d.x1! > b1.x) b1.x = d.x! + d.x1!;\n      if (d.y! + d.y1! > b1.y) b1.y = d.y! + d.y1!;\n    }\n\n    protected collideRects(a: Word, b: { x: number, y: number }[]) {\n      return a.x! + a.x1! > b[0].x && a.x! + a.x0! < b[1].x && a.y! + a.y1! > b[0].y && a.y! + a.y0! < b[1].y;\n    }\n\n    protected archimedeanSpiral(size: number[]) {\n      let e = size[0] / size[1];\n      return (t: number) => {\n        return [e * (t *= .1) * Math.cos(t), t * Math.sin(t)];\n      };\n    }\n\n    protected rectangularSpiral(size: number[]) {\n      let dy = 4;\n      let dx = dy * size[0] / size[1];\n      let x = 0;\n      let y = 0;\n      return (t: number) => {\n        let sign = t < 0 ? -1 : 1;\n        // See triangular numbers: T_n = n * (n + 1) / 2.\n        switch ((Math.sqrt(1 + 4 * sign * t) - sign) & 3) {\n          case 0: x += dx; break;\n          case 1: y += dy; break;\n          case 2: x -= dx; break;\n          default: y -= dy; break;\n        }\n        return [x, y];\n      };\n    }\n\n    // TODO reuse arrays?\n    protected zeroArray(n: number) {\n      let a: number[] = [];\n      let i = -1;\n      while (++i < n) a[i] = 0;\n      return a;\n    }\n\n    cloudCanvas() {\n      return document.createElement(\"canvas\");\n    }\n\n    protected functor = (returnVal: any) => {\n\n      return typeof returnVal === \"function\" ? returnVal : ((_: any, d?: Word, i?: number) => { return returnVal; });\n    }\n\n    protected spirals = {\n      archimedean: this.archimedeanSpiral,\n      rectangular: this.rectangularSpiral\n    };\n\n  };\n\n};\n","/*\n * Public API Surface of d3-cloud-ts\n */\n\nexport * from './lib/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}